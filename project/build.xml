<?xml version="1.0" ?>
<!-- This is an Apache Ant build file. -->
<project default="build">
	
	<!-- The compiler class path consists of the lib directory and any _immediate_ subdirectories. Note that the runtime class path is different. -->
	<path id="libsRef">
		<fileset dir="lib">
			<include name="*.jar"/>
			<include name="*/*.jar"/>
		</fileset>
	</path>
	
	
	
	<target name="build">
		<mkdir dir="build/classes"/>
		
		<javac srcdir="src" destdir="build/classes" debuglevel="lines,vars,source" classpathref="libsRef" includeantruntime="false" debug="true" source="1.6" target="1.8">
			<compilerarg value="-Xlint:unchecked"/>
			<compilerarg value="-Xlint:deprecation"/>
			<compilerarg value="-Xlint:-options"/><!-- We're not cross-compiling here - we're merely restricting ourselves to using the old syntax rules. Therefore specifying a bootclasspath isn't necessary; we're just disabling the warning instead. -->
		</javac>
		
	</target>
	
	
	
<!--
	<target name="package" depends="build">
		<mkdir dir="build/dist"/>
		<jar destfile="build/dist/testbed.jar" basedir="build/classes">
			<manifest>
				<attribute name="Main-Class" value="de.thaw.thesis.testbed.Testbed"/>
				<attribute name="Class-Path" value="lib/geotools-8.5/*"/>
			</manifest>
		</jar>
	</target>
-->
	
	
	
	<target name="doc">
		<mkdir dir="build/doc"/>
		<javadoc sourcepath="src" destdir="build/doc" classpathref="libsRef" access="package" Encoding="UTF-8" docencoding="UTF-8" charset="UTF-8" Version="true" Use="true" Author="true" stylesheetfile="lib/classic-javadoc-stylesheet/classic-stylesheet.css">
			<link href="https://docs.oracle.com/javase/6/docs/api/"/>
			<link href="http://atetric.com/atetric/javadoc/com.vividsolutions/jts/1.13/"/>
			<link href="http://docs.geotools.org/stable/javadocs/"/>
			<arg value="-Xdoclint:none"/>
		</javadoc>
	</target>
	
	
	
	<target name="clean">
		<delete dir="build"/>
	</target>
	
	
	
	<target name="run" depends="build">
		<exec executable="./run-testbed.sh" dir="."/>
	</target>
	
	
	
	<taskdef name="testng" classname="org.testng.TestNGAntTask" classpathref="libsRef"/>
	
	<target name="build-tests" depends="build">
		<mkdir dir="build/classes"/>
		
		<javac srcdir="test" destdir="build/classes" debuglevel="lines,vars,source" classpathref="libsRef" includeantruntime="false" debug="true" source="1.6" target="1.8">
			<compilerarg value="-Xlint:unchecked"/>
			<compilerarg value="-Xlint:deprecation"/>
			<compilerarg value="-Xlint:-options"/>
		</javac>
		
	</target>
	
	<target name="test" depends="build-tests">
		<testng outputdir="build/test-report">
			<classpath>
				<pathelement path="build/classes"/>
				<path refid="libsRef"/>
			</classpath>
			<xmlfileset dir="test" includes="*.xml"/>
		</testng>
	</target>
	
	<target name="cleantest" depends="clean, test" />
	
	
	
	<target name="all" depends="clean, build, doc" />
	
	
	
<!--
	<target name="espebu" depends="build">
		<java classname="de.thaw.espebu.Espebu">
			<classpath>
				<pathelement path="build/classes"/>
				<path refid="libsRef"/>
			</classpath>
		</java>
	</target>
-->
	
</project>
